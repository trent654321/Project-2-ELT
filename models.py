import sqlalchemy
from sqlalchemy import Column, Date, Integer, Numeric, String
from sqlalchemy import Table
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import PrimaryKeyConstraint

Base = declarative_base()

class covid_data(Base):
	__tablename__ = "covid_data"
	iso_code = Column(String())
	continent = Column(String())
	location = Column(String())
	date = Column(Date())
	total_cases = Column(Numeric())
	new_cases = Column(Numeric())
	#new_cases_smoothed = Column(Numeric())
	total_deaths = Column(Numeric())
	new_deaths = Column(Numeric())
	#new_deaths_smoothed = Column(Numeric())
	#total_cases_per_million = Column(Numeric())
	#new_cases_per_million = Column(Numeric())
	#new_cases_smoothed_per_millon = Column(Numeric())
	#total_deaths_per_million = Column(Numeric())
	#new_deaths_per_million = Column(Numeric())
	#new_deaths_smoothed_per_million = Column(Numeric())
	#reproduction_rate = Column(Numeric())
	icu_patients = Column(Numeric())
	#icu_patients_per_million = Column(Numeric())
	hosp_patients = Column(Numeric())
	#hosp_patients_per_million = Column(Numeric())
	#weekly_icu_admissions = Column(Numeric())
	#weekly_icu_admissions_per_million = Column(Numeric())
	#weekly_hosp_admissions = Column(Numeric())
	#weekly_hosp_admissions_per_million = Column(Numeric())
	new_tests = Column(Numeric())
	total_tests = Column(Numeric())
	#total_tests_per_thousand = Column(Numeric())
	#new_tests_per_thousand = Column(Numeric())
	#new_tests_smoothed = Column(Numeric())
	#new_tests_smoothed_per_thousand = Column(Numeric())
	#positive_rate = Column(Numeric())
	#tests_per_case = Column(Numeric())
	#tests_units = Column(String())
	total_vaccinations = Column(Numeric())
	people_vaccinated = Column(Numeric())
	people_fully_vaccinated = Column(Numeric())
	new_vaccinations = Column(Numeric())
	#new_vaccinations_smoothed = Column(Numeric())
	#total_vaccinations_per_hundred = Column(Numeric())
	#people_vaccinated_per_hundred = Column(Numeric())
	#people_fully_vaccinated_per_hundred = Column(Numeric())
	#new_vaccinations_smoothed_per_million = Column(Numeric())
	#stringency_index = Column(Numeric())
	population = Column(Numeric())
	#population_density = Column(Numeric())
	#median_age = Column(Numeric())
	#aged_65_older = Column(Numeric())
	#aged_70_older = Column(Numeric())
	#gdp_per_capita = Column(Numeric())
	#extreme_poverty = Column(Numeric())
	#cardiovasc_death_rate = Column(Numeric())
	#diabetes_prevalence = Column(Numeric())
	#female_smokers = Column(Numeric())
	#male_smokers = Column(Numeric())
	#handwashing_facilities = Column(Numeric())
	#hospital_beds_per_thousand =  Column(Numeric())
	#life_expectancy = Column(Numeric())
	#human_development_index = Column(Numeric())
	#excess_mortality =	Column(Numeric())
	__table_args__ = (
		PrimaryKeyConstraint(iso_code, date),
		{},
	)

class countries(Base):
	__tablename__ = "countries"
	countrycode = Column(String(), primary_key=True)
	ShortName = Column(String())
	TableName = Column(String())
	LongName = Column(String())
	Alpha2Code = Column(String())
	CurrencyUnit = Column(String())
	#SpecialNotes = Column(String())
	Region = Column(String())
	incomegroup	= Column(String())
	Wb2Code	= Column(String())
	#NationalAccountsBaseYear = Column(String())
	#NationalAccountsReferenceYear = Column(String())
	#SnaPriceValuation = Column(String())
	#LendingCategory = Column(String())
	#OtherGroups	= Column(String())
	#SystemOfNationalAccounts = Column(String())
	#AlternativeConversionFactor	= Column(String())
	#PppSurveyYear = Column(String())
	#BalanceOfPaymentsManualInUse = Column(String())
	#ExternalDebtReportingStatus = Column(String())
	SystemOfTrade = Column(String())
	#GovernmentAccountingConcept = Column(String())
	#ImfDataDisseminationStandard = Column(String())
	#LatestPopulationCensus = Column(String())
	#LatestHouseholdSurvey = Column(String())
	#SourceOfMostRecentIncomeAndExpenditureData = Column(String())
	#VitalRegistrationComplete = Column(String())
	#LatestAgriculturalCensus = Column(String())
	#LatestIndustrialData = Column(Numeric())
	#LatestTradeData = Column(Numeric())
	#LatestWaterWithdrawalData = Column(Numeric())